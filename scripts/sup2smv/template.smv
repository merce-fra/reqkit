-- If tmax (resp. lmax, amax) is infinite, set tmax (resp. lmax, amax) to -1.

-- tmin = tmax = lmin = lmax = amin = amax = 0:
MODULE sup_inv(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
DEFINE
	ei := tse & tee & (!ase | !aee);
	e := ( next(tse) & next(tee) & (!next(ase) | !next(aee)) );


-- lmin = lmax = amin = amax = 0, tmin <= tmax = 1:
MODULE sup_inv_trg(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
DEFINE
	ei := tse & tee & tmin = 0 & (!ase | !aee);
	e :=
		( next(tse) & next(tee) & tmin = 0 & (!next(ase) | !next(aee)) )
		| ( tse & tc & ( !tee | tmin != 0 ) & next(tee) & (!next(ase) | !next(aee)) );


-- tmin = tmax = amin = amax = 0, lmin <= lmax = 1:
MODULE sup_inv_loc(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
DEFINE
	ei := tse & tee & ase & lmin = 0 & !aee;
	e := 
		( next(tse) & next(tee) & next(ase) & lmin = 0 & !next(aee) )
		| ( tse & tee & (!ase | lmin != 0) & (!next(ase) | !next(aee)) );


-- tmin = tmax = lmin = lmax = 0, amin <= amax = 1:
MODULE sup_inv_act(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
DEFINE
	ei := ( tse & tee & !ase ) | ( tse & tee & ase & !ac & (!aee | amin != 0) );
	e := 
		( next(tse) & next(tee) & !next(ase) )
		| ( next(tse) & next(tee) & next(ase) & !next(ac) & (!next(aee) | amin != 0) )
		| ( tse & tee & ase & ac & (!aee | amin != 0) & !next(aee) );


-- lmin = lmax = amin = amax = 0:
MODULE sup_trg(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
VAR
	st : {ini, trg};

	-- Counter shared by trigger phase, action phase, and local scope
	cnt : 0..max(max(max(max(max(tmin,tmax),lmin),lmax),amin),amax);

INIT
	cnt = 0 & case
		tse : case
			(!tee | tmin != 0) : ( (tc & tmax != 0) ? st = trg : st = ini );
			TRUE : st = ini;
		esac;
		TRUE : st = ini;
	esac

TRANS
	case
		st = ini : ( next(cnt) = 0 ) & case
			next(tse) : case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				TRUE : next(st) = ini;
			esac;
			TRUE : next(st) = ini;
		esac;

		st = trg : case
			( !next(tee) | cnt + 1 < tmin ) : case
				( next(tc) & (cnt + 1 < tmax | tmax = -1) ) : 
					( next(st) = trg & ( (cnt >= tmin & cnt >= tmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) );
				TRUE : ( next(cnt) = 0 ) & ( ( next(tse) & next(tc) ) ? next(st) = trg : next(st) = ini );
			esac;
			TRUE : ( next(cnt) = 0 ) & case
				( !next(ase) | !next(aee) ) : next(st) = ini;
				TRUE : ( next(tse) & next(tc) & tmin != 0 ) ? next(st) = trg : next(st) = ini;
			esac;
		esac;
	esac;

DEFINE
	ei :=
		( tse & tee & tmin = 0 & (!ase | !aee) );

	e := 
		( (st = ini) & next(tse) & next(tee) & tmin = 0 & (!next(ase) | !next(aee)) )
		| ( (st = trg) & next(tee) & cnt + 1 >= tmin & (!next(ase) | !next(aee)) );


-- tmin = tmax = amin = amax = 0:
MODULE sup_loc(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
VAR
	st : {ini, loc};

	-- Counter shared by trigger phase, action phase, and local scope
	cnt : 0..max(max(max(max(max(tmin,tmax),lmin),lmax),amin),amax);

INIT
	cnt = 0 & case
		tse : case
			!tee : st = ini;
			(!ase | lmin != 0) : st = loc;
			TRUE : st = ini;
		esac;
		TRUE : st = ini;
	esac

TRANS
	case
		st = ini : ( next(cnt) = 0 ) & case
			next(tse) : case
				!next(tee) : next(st) = ini;
				( !next(ase) | lmin != 0 ) : next(st) = loc;
				TRUE : next(st) = ini;
			esac;
			TRUE : next(st) = ini;
		esac;

		st = loc : case
			( !next(ase) | cnt + 1 < lmin | (cnt + 1 > lmax & lmax != -1) ) : 
				( (cnt >= lmin & cnt >= lmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) 
				& ( next(st) = loc );
			!next(aee) : ( next(cnt) = 0 ) & ( next(st) = ini );
			next(tse) : ( next(cnt) = 0 ) & case
				!next(tee) : next(st) = ini;
				TRUE : ( lmin != 0 ? next(st) = loc : next(st) = ini );
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;
	esac;

DEFINE
	ei :=
		( tse & tee & !ase & lmax = 0 )
		| ( tse & tee & ase & lmin = 0 & !aee );

	e := 
		( (st = ini) & next(tse) & next(tee) & !next(ase) & lmax = 0 )
		| ( (st = ini) & next(tse) & next(tee) & next(ase) & lmin = 0 & !next(aee) )
		| ( (st = loc) & !next(ase) & cnt + 1 >= lmax & lmax != -1 )
		| ( (st = loc) & next(ase) & cnt + 1 >= lmin & !next(aee) );


-- tmin = tmax = lmin = lmax = 0:
MODULE sup_act(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
VAR
	st : {ini, act};

	-- Counter shared by trigger phase, action phase, and local scope
	cnt : 0..max(max(max(max(max(tmin,tmax),lmin),lmax),amin),amax);

INIT
	cnt = 0 & case
		tse : case
			(!tee | !ase) : st = ini;
			(!aee | amin != 0) : st = act;
			TRUE : st = ini;
		esac;
		TRUE : st = ini;
	esac

TRANS
	case
		st = ini : ( next(cnt) = 0 ) & case
			next(tse) : case
				( !next(tee) | !next(ase) ) : next(st) = ini;
				( !next(aee) | amin != 0 ) : next(st) = act;
				TRUE : next(st) = ini;
			esac;
			TRUE : next(st) = ini;
		esac;

		st = act : case
			( !next(aee) | cnt + 1 < amin | (cnt + 1 > amax & amax != -1) ) : 
				( (cnt >= amin & cnt >= amax) ? next(cnt) = cnt : next(cnt) = cnt + 1 )
				& ( next(st) = act );
			next(tse) : ( next(cnt) = 0 ) & case
				( !next(tee) | !next(ase) ) : next(st) = ini;
				amin != 0 : next(st) = act;
				TRUE : next(st) = ini;
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;
	esac;

DEFINE
	ei := 
		( tse & tee & !ase )
		| ( tse & tee & ase & (!aee | amin != 0) & (!ac | amax = 0) );
	e := 
		( (st = ini) & next(tse) & next(tee) & !next(ase) )
		| ( (st = ini) & next(tse) & next(tee) & next(ase) & (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = act) & (!next(aee) | cnt + 1 < amin) & (!next(ac) | (cnt + 1 >= amax & amax != -1)) )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & !next(ase) )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & next(ase) & amin != 0 & !next(ac) );


-- amin = amax = 0:
MODULE sup_trg_loc(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
VAR
	st : {ini, trg, loc};

	-- Counter shared by trigger phase, action phase, and local scope
	cnt : 0..max(max(max(max(max(tmin,tmax),lmin),lmax),amin),amax);

INIT
	cnt = 0 & case
		tse : case
			(!tee | tmin != 0) : ( (tc & tmax != 0) ? st = trg : st = ini );
			(!ase | lmin != 0) : st = loc;
			-- !aee : st = ini;
			TRUE : st = ini;
		esac;
		TRUE : st = ini;
	esac

TRANS
	case
		st = ini : ( next(cnt) = 0 ) & case
			next(tse) : case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				( !next(ase) | lmin != 0 ) : next(st) = loc;
				-- !next(aee) : next(st) = act;
				TRUE : next(st) = ini;
			esac;
			TRUE : next(st) = ini;
		esac;

		st = trg : case
			( !next(tee) | cnt + 1 < tmin ) : case
				( next(tc) & (cnt + 1 < tmax | tmax = -1) ) : 
					( next(st) = trg & ( (cnt >= tmin & cnt >= tmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) );
				TRUE : ( next(cnt) = 0 ) & ( ( next(tse) & next(tc) ) ? next(st) = trg : next(st) = ini );
			esac;
			TRUE : ( next(cnt) = 0 ) & case
				( !next(ase) | lmin != 0 ) : next(st) = loc;
				!next(aee) : next(st) = ini;
				TRUE : ( next(tse) & next(tc) & tmin != 0 ) ? next(st) = trg : next(st) = ini;
			esac;
		esac;

		st = loc : case
			( !next(ase) | cnt + 1 < lmin | (cnt + 1 > lmax & lmax != -1) ) : 
				( (cnt >= lmin & cnt >= lmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) 
				& ( next(st) = loc );
			!next(aee) : ( next(cnt) = 0 ) & ( next(st) = ini );
			next(tse) : ( next(cnt) = 0 ) & case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				TRUE : ( lmin != 0 ? next(st) = loc : next(st) = ini );
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;
	esac;

DEFINE
	ei :=
		( tse & tee & tmin = 0 & !ase & lmax = 0 )
		| ( tse & tee & tmin = 0 & ase & lmin = 0 & !aee );

	e := 
		( (st = ini) & next(tse) & next(tee) & tmin = 0 & !next(ase) & lmax = 0 )
		| ( (st = ini) & next(tse) & next(tee) & tmin = 0 & next(ase) & lmin = 0 
			& !next(aee) )
		| ( (st = trg) & next(tee) & cnt + 1 >= tmin & !next(ase) & lmax = 0 )
		| ( (st = trg) & next(tee) & cnt + 1 >= tmin & next(ase) & lmin = 0 
			& !next(aee) )
		| ( (st = loc) & !next(ase) & cnt + 1 >= lmax & lmax != -1 )
		| ( (st = loc) & next(ase) & cnt + 1 >= lmin & !next(aee) );


-- lmin = lmax = 0:
MODULE sup_trg_act(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
VAR
	st : {ini, trg, act};

	-- Counter shared by trigger phase, action phase, and local scope
	cnt : 0..max(max(max(max(max(tmin,tmax),lmin),lmax),amin),amax);

INIT
	cnt = 0 & case
		tse : case
			(!tee | tmin != 0) : ( (tc & tmax != 0) ? st = trg : st = ini );
			!ase : st = ini;
			(!aee | amin != 0) : st = act;
			TRUE : st = ini;
		esac;
		TRUE : st = ini;
	esac

TRANS
	case
		st = ini : ( next(cnt) = 0 ) & case
			next(tse) : case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				!next(ase) : next(st) = ini;
				( !next(aee) | amin != 0 ) : next(st) = act;
				TRUE : next(st) = ini;
			esac;
			TRUE : next(st) = ini;
		esac;

		st = trg : case
			( !next(tee) | cnt + 1 < tmin ) : case
				( next(tc) & (cnt + 1 < tmax | tmax = -1) ) : 
					( next(st) = trg & ( (cnt >= tmin & cnt >= tmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) );
				TRUE : ( next(cnt) = 0 ) & ( ( next(tse) & next(tc) ) ? next(st) = trg : next(st) = ini );
			esac;
			TRUE : ( next(cnt) = 0 ) & case
				!next(ase) : next(st) = ini;
				( !next(aee) | amin != 0 ) : next(st) = act;
				TRUE : ( next(tse) & next(tc) & tmin != 0 ) ? next(st) = trg : next(st) = ini;
			esac;
		esac;

		st = act : case
			( !next(aee) | cnt + 1 < amin | (cnt + 1 > amax & amax != -1) ) : 
				( (cnt >= amin & cnt >= amax) ? next(cnt) = cnt : next(cnt) = cnt + 1 )
				& ( next(st) = act );
			next(tse) : ( next(cnt) = 0 ) & case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				!next(ase) : next(st) = ini;
				amin != 0 : ( next(st) = act );
				TRUE : next(st) = ini;
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;
	esac;

DEFINE
	ei :=
		( tse & tee & tmin = 0 & !ase )
		| ( tse & tee & tmin = 0 & ase & (!aee | amin != 0) & (!ac | amax = 0) );

	e := 
		( (st = ini) & next(tse) & next(tee) & tmin = 0 & !next(ase) )
		| ( (st = ini) & next(tse) & next(tee) & tmin = 0 & next(ase) 
			& (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = trg) & next(tee) & cnt + 1 >= tmin & !next(ase) )
		| ( (st = trg) & next(tee) & cnt + 1 >= tmin & next(ase) 
			& (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = act) & (!next(aee) | cnt + 1 < amin) & (!next(ac) | (cnt + 1 >= amax & amax != -1)) )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & tmin = 0 
			& !next(ase) )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & tmin = 0 
			& next(ase) & amin != 0 & !next(ac) );


-- tmin = tmax = 0:
MODULE sup_loc_act(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
VAR
	st : {ini, loc, act};

	-- Counter shared by trigger phase, action phase, and local scope
	cnt : 0..max(max(max(max(max(tmin,tmax),lmin),lmax),amin),amax);

INIT
	cnt = 0 & case
		tse : case
			!tee : st = ini;
			(!ase | lmin != 0) : st = loc;
			(!aee | amin != 0) : st = act;
			TRUE : st = ini;
		esac;
		TRUE : st = ini;
	esac

TRANS
	case
		st = ini : ( next(cnt) = 0 ) & case
			next(tse) : case
				!next(tee) : next(st) = ini;
				( !next(ase) | lmin != 0 ) : next(st) = loc;
				( !next(aee) | amin != 0 ) : next(st) = act;
				TRUE : next(st) = ini;
			esac;
			TRUE : next(st) = ini;
		esac;

		st = loc : case
			( !next(ase) | cnt + 1 < lmin | (cnt + 1 > lmax & lmax != -1) ) : 
				( (cnt >= lmin & cnt >= lmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) 
				& ( next(st) = loc );
			( !next(aee) | amin != 0 ) : ( next(cnt) = 0 ) & ( next(st) = act );
			next(tse) : ( next(cnt) = 0 ) & case
				!next(tee) : next(st) = ini;
				TRUE : ( lmin != 0 ? next(st) = loc : next(st) = ini );
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;

		st = act : case
			( !next(aee) | cnt + 1 < amin | (cnt + 1 > amax & amax != -1) ) : 
				( (cnt >= amin & cnt >= amax) ? next(cnt) = cnt : next(cnt) = cnt + 1 )
				& ( next(st) = act );
			next(tse) : ( next(cnt) = 0 ) & case
				!next(tee) : next(st) = ini;
				( !next(ase) | lmin != 0 ) : ( next(st) = loc );
				amin != 0 : ( next(st) = act );
				TRUE : next(st) = ini;
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;
	esac;

DEFINE
	ei := 
		( tse & tee & !ase & lmax = 0 )
		| ( tse & tee & ase & lmin = 0 & (!aee | amin != 0) & (!ac | amax = 0) );
	e := 
		( (st = ini) & next(tse) & next(tee) & !next(ase) & lmax = 0 )
		| ( (st = ini) & next(tse) & next(tee) & next(ase) & lmin = 0 & (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = loc) & !next(ase) & cnt + 1 >= lmax & lmax != -1 )
		| ( (st = loc) & next(ase) & cnt + 1 >= lmin & (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = act) & (!next(aee) | cnt + 1 < amin) & (!next(ac) | (cnt + 1 >= amax & amax != -1)) )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & !next(ase) & lmax = 0 )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & next(ase) & lmin = 0 & amin != 0 & !next(ac) );


MODULE sup(tse, tc, tee, tmin, tmax, lmin, lmax, ase, ac, aee, amin, amax)
VAR
	st : {ini, trg, loc, act};

	-- Counter shared by trigger phase, action phase, and local scope
	cnt : 0..max(max(max(max(max(tmin,tmax),lmin),lmax),amin),amax);

INIT
	cnt = 0 & case
		tse : case
			(!tee | tmin != 0) : ( (tc & tmax != 0) ? st = trg : st = ini );
			(!ase | lmin != 0) : st = loc;
			(!aee | amin != 0) : st = act;
			TRUE : st = ini;
		esac;
		TRUE : st = ini;
	esac

TRANS
	case
		st = ini : ( next(cnt) = 0 ) & case
			next(tse) : case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				( !next(ase) | lmin != 0 ) : next(st) = loc;
				( !next(aee) | amin != 0 ) : next(st) = act;
				TRUE : next(st) = ini;
			esac;
			TRUE : next(st) = ini;
		esac;

		st = trg : case
			( !next(tee) | cnt + 1 < tmin ) : case
				( next(tc) & (cnt + 1 < tmax | tmax = -1) ) : 
					( next(st) = trg & ( (cnt >= tmin & cnt >= tmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) );
				TRUE : ( next(cnt) = 0 ) & ( ( next(tse) & next(tc) ) ? next(st) = trg : next(st) = ini );
			esac;
			TRUE : ( next(cnt) = 0 ) & case
				( !next(ase) | lmin != 0 ) : next(st) = loc;
				( !next(aee) | amin != 0 ) : next(st) = act;
				TRUE : ( next(tse) & next(tc) & tmin != 0 ) ? next(st) = trg : next(st) = ini;
			esac;
		esac;

		st = loc : case
			( !next(ase) | cnt + 1 < lmin | (cnt + 1 > lmax & lmax != -1) ) : 
				( (cnt >= lmin & cnt >= lmax) ? next(cnt) = cnt : next(cnt) = cnt + 1 ) 
				& ( next(st) = loc );
			( !next(aee) | amin != 0 ) : ( next(cnt) = 0 ) & ( next(st) = act );
			next(tse) : ( next(cnt) = 0 ) & case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				TRUE : ( lmin != 0 ? next(st) = loc : next(st) = ini );
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;

		st = act : case
			( !next(aee) | cnt + 1 < amin | (cnt + 1 > amax & amax != -1) ) : 
				( (cnt >= amin & cnt >= amax) ? next(cnt) = cnt : next(cnt) = cnt + 1 )
				& ( next(st) = act );
			next(tse) : ( next(cnt) = 0 ) & case
				( !next(tee) | tmin != 0 ) : ( (next(tc) & tmax != 0) ? next(st) = trg : next(st) = ini );
				( !next(ase) | lmin != 0 ) : next(st) = loc;
				amin != 0 : ( next(st) = act );
				TRUE : next(st) = ini;
			esac;
			TRUE : ( next(st) = ini ) & ( next(cnt) = 0 );
		esac;
	esac;

DEFINE
	ei :=
		( tse & tee & tmin = 0 & !ase & lmax = 0 )
		| ( tse & tee & tmin = 0 & ase & lmin = 0 & (!aee | amin != 0) & (!ac | amax = 0) );

	e := 
		( (st = ini) & next(tse) & next(tee) & tmin = 0 & !next(ase) & lmax = 0 )
		| ( (st = ini) & next(tse) & next(tee) & tmin = 0 & next(ase) & lmin = 0 
			& (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = trg) & next(tee) & cnt + 1 >= tmin & !next(ase) & lmax = 0 )
		| ( (st = trg) & next(tee) & cnt + 1 >= tmin & next(ase) & lmin = 0 
			& (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = loc) & !next(ase) & cnt + 1 >= lmax & lmax != -1 )
		| ( (st = loc) & next(ase) & cnt + 1 >= lmin & (!next(aee) | amin != 0) & (!next(ac) | amax = 0) )
		| ( (st = act) & (!next(aee) | cnt + 1 < amin) & (!next(ac) | (cnt + 1 >= amax & amax != -1)) )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & tmin = 0 
			& !next(ase) & lmax = 0 )
		| ( (st = act) & next(aee) & cnt + 1 >= amin & next(tse) & next(tee) & tmin = 0 
			& next(ase) & lmin = 0 & amin != 0 & !next(ac) );

